{
	"compiler": {
		"version": "0.8.17+commit.8df45f5f"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "forwarder",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "deployedWithProxy_",
						"type": "bool"
					},
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "symbol",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "tokenId",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "terms",
						"type": "string"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Approval",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Burn",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "enforcer",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "string",
						"name": "reasonIndexed",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "reason",
						"type": "string"
					}
				],
				"name": "Freeze",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint8",
						"name": "version",
						"type": "uint8"
					}
				],
				"name": "Initialized",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "beneficiary",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Mint",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "Paused",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "previousAdminRole",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "newAdminRole",
						"type": "bytes32"
					}
				],
				"name": "RoleAdminChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					}
				],
				"name": "RoleGranted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					}
				],
				"name": "RoleRevoked",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "newRuleEngine",
						"type": "address"
					}
				],
				"name": "RuleEngineSet",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "oldTime",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "newTime",
						"type": "uint256"
					}
				],
				"name": "SnapshotSchedule",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "time",
						"type": "uint256"
					}
				],
				"name": "SnapshotUnschedule",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "Spend",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "string",
						"name": "newTerm",
						"type": "string"
					}
				],
				"name": "TermSet",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "string",
						"name": "newTokenId",
						"type": "string"
					}
				],
				"name": "TokenIdSet",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Transfer",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "enforcer",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "string",
						"name": "reasonIndexed",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "reason",
						"type": "string"
					}
				],
				"name": "Unfreeze",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "Unpaused",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "BURNER_ROLE",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "DEFAULT_ADMIN_ROLE",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "ENFORCER_ROLE",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "MINTER_ROLE",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "PAUSER_ROLE",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "SNAPSHOOTER_ROLE",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					}
				],
				"name": "allowance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "approve",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "currentAllowance",
						"type": "uint256"
					}
				],
				"name": "approve",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "decimals",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "subtractedValue",
						"type": "uint256"
					}
				],
				"name": "decreaseAllowance",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "detectTransferRestriction",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "code",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "forceBurn",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "reason",
						"type": "string"
					}
				],
				"name": "freeze",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "frozen",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getAllSnapshots",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "",
						"type": "uint256[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getNextSnapshots",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "",
						"type": "uint256[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					}
				],
				"name": "getRoleAdmin",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "grantRole",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "hasRole",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "addedValue",
						"type": "uint256"
					}
				],
				"name": "increaseAllowance",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bool",
						"name": "deployedWithProxy_",
						"type": "bool"
					},
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "symbol",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "tokenId",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "terms",
						"type": "string"
					}
				],
				"name": "initialize",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "forwarder",
						"type": "address"
					}
				],
				"name": "isTrustedForwarder",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "kill",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint8",
						"name": "restrictionCode",
						"type": "uint8"
					}
				],
				"name": "messageForTransferRestriction",
				"outputs": [
					{
						"internalType": "string",
						"name": "message",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "mint",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "pause",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "paused",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "renounceRole",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "oldTime",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "newTime",
						"type": "uint256"
					}
				],
				"name": "rescheduleSnapshot",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "revokeRole",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "ruleEngine",
				"outputs": [
					{
						"internalType": "contract IRuleEngine",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "time",
						"type": "uint256"
					}
				],
				"name": "scheduleSnapshot",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "time",
						"type": "uint256"
					}
				],
				"name": "scheduleSnapshotNotOptimized",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "contract IRuleEngine",
						"name": "ruleEngine_",
						"type": "address"
					}
				],
				"name": "setRuleEngine",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "terms_",
						"type": "string"
					}
				],
				"name": "setTerms",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "tokenId_",
						"type": "string"
					}
				],
				"name": "setTokenId",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "time",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "snapshotBalanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "time",
						"type": "uint256"
					}
				],
				"name": "snapshotTotalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes4",
						"name": "interfaceId",
						"type": "bytes4"
					}
				],
				"name": "supportsInterface",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "symbol",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "terms",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "tokenId",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transfer",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transferFrom",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "reason",
						"type": "string"
					}
				],
				"name": "unfreeze",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "unpause",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "time",
						"type": "uint256"
					}
				],
				"name": "unscheduleLastSnapshot",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "time",
						"type": "uint256"
					}
				],
				"name": "unscheduleSnapshotNotOptimized",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "validateTransfer",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"allowance(address,address)": {
					"details": "See {IERC20-allowance}."
				},
				"approve(address,uint256)": {
					"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
				},
				"approve(address,uint256,uint256)": {
					"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
				},
				"balanceOf(address)": {
					"details": "See {IERC20-balanceOf}."
				},
				"constructor": {
					"custom:oz-upgrades-unsafe-allow": "constructor"
				},
				"decreaseAllowance(address,uint256)": {
					"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
				},
				"detectTransferRestriction(address,address,uint256)": {
					"details": "ERC1404 check if _value token can be transferred from _from to _to",
					"params": {
						"amount": "uint256 the amount of tokens to be transferred",
						"from": "address The address which you want to send tokens from",
						"to": "address The address which you want to transfer to"
					},
					"returns": {
						"code": "of the rejection reason"
					}
				},
				"forceBurn(address,uint256)": {
					"details": "Destroys `amount` tokens from `account` See {ERC20-_burn}"
				},
				"freeze(address,string)": {
					"params": {
						"account": "the account to freeze",
						"reason": "indicate why the account was frozen. "
					}
				},
				"frozen(address)": {
					"details": "Returns true if the account is frozen, and false otherwise."
				},
				"getAllSnapshots()": {
					"details": " Get all snapshots"
				},
				"getNextSnapshots()": {
					"details": " Get the next scheduled snapshots"
				},
				"getRoleAdmin(bytes32)": {
					"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
				},
				"grantRole(bytes32,address)": {
					"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
				},
				"hasRole(bytes32,address)": {
					"details": "Returns `true` if `account` has been granted `role`."
				},
				"increaseAllowance(address,uint256)": {
					"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
				},
				"kill()": {
					"custom:oz-upgrades-unsafe-allow": "selfdestruct"
				},
				"messageForTransferRestriction(uint8)": {
					"details": "ERC1404 returns the human readable explaination corresponding to the error code returned by detectTransferRestriction",
					"params": {
						"restrictionCode": "The error code returned by detectTransferRestriction"
					},
					"returns": {
						"message": "The human readable explaination corresponding to the error code returned by detectTransferRestriction"
					}
				},
				"mint(address,uint256)": {
					"details": "Creates `amount` new tokens for `to`. See {ERC20-_mint}. Requirements: - the caller must have the `MINTER_ROLE`."
				},
				"name()": {
					"details": "Returns the name of the token."
				},
				"pause()": {
					"details": "Pauses all token transfers. See {ERC20Pausable} and {Pausable-_pause}. Requirements: - the caller must have the `PAUSER_ROLE`."
				},
				"paused()": {
					"details": "Returns true if the contract is paused, and false otherwise."
				},
				"renounceRole(bytes32,address)": {
					"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
				},
				"revokeRole(bytes32,address)": {
					"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
				},
				"snapshotBalanceOf(uint256,address)": {
					"returns": {
						"_0": "value stored in the snapshot, or the actual balance if no snapshot"
					}
				},
				"snapshotTotalSupply(uint256)": {
					"details": "See {OpenZeppelin - ERC20Snapshot} Retrieves the total supply at the specified time.",
					"returns": {
						"_0": "value stored in the snapshot, or the actual totalSupply if no snapshot"
					}
				},
				"supportsInterface(bytes4)": {
					"details": "See {IERC165-supportsInterface}."
				},
				"symbol()": {
					"details": "Returns the symbol of the token, usually a shorter version of the name."
				},
				"totalSupply()": {
					"details": "See {IERC20-totalSupply}."
				},
				"transfer(address,uint256)": {
					"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
				},
				"unfreeze(address,string)": {
					"params": {
						"account": "the account to unfreeze",
						"reason": "indicate why the account was unfrozen.   "
					}
				},
				"unpause()": {
					"details": "Unpauses all token transfers. See {ERC20Pausable} and {Pausable-_unpause}. Requirements: - the caller must have the `PAUSER_ROLE`."
				}
			},
			"version": 1
		},
		"userdoc": {
			"events": {
				"Freeze(address,address,string,string)": {
					"notice": "Emitted when an address is frozen."
				},
				"SnapshotSchedule(uint256,uint256)": {
					"notice": "Emitted when the snapshot with the specified oldTime was scheduled or rescheduled at the specified newTime."
				},
				"SnapshotUnschedule(uint256)": {
					"notice": "Emitted when the scheduled snapshot with the specified time was cancelled."
				},
				"Unfreeze(address,address,string,string)": {
					"notice": "Emitted when an address is unfrozen."
				}
			},
			"kind": "user",
			"methods": {
				"freeze(address,string)": {
					"notice": "Freezes an address."
				},
				"snapshotBalanceOf(uint256,address)": {
					"notice": "Return the number of tokens owned by the given owner at the time when the snapshot with the given time was created."
				},
				"unfreeze(address,string)": {
					"notice": "Unfreezes an address."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/CMTAT.sol": "CMTAT"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/CMTAT.sol": {
			"keccak256": "0x977edc8db873fe1e6c8d148be907f6cf56b39950a923bd0d2dc7c954a020d285",
			"license": "MPL-2.0",
			"urls": [
				"bzz-raw://4caa8677900a5906b268b0a5008d9c5c488f6063b408a505a9d68186fdbc7bff",
				"dweb:/ipfs/QmU6vPAZUgVXK7YRiCFapzLbjQ3CSTjrbU1ciM268x9LL3"
			]
		},
		"contracts/interfaces/IERC1404.sol": {
			"keccak256": "0xecce8893e606fe62b4f78229a1e22b3b478bf528ba024350ad05438b1b1e9da2",
			"license": "MPL-2.0",
			"urls": [
				"bzz-raw://b087f9e24c469478d47dd31e585a6fe414b66ace5c0089b14dc7d26600afd1fa",
				"dweb:/ipfs/QmXyqGPdjSU7XgNdkuqt36nMRd4shQnFjFXcGJDufznKMM"
			]
		},
		"contracts/interfaces/IERC1404Wrapper.sol": {
			"keccak256": "0x09837917b4deec5fe7f76ae18836eba00f7e8083d2392768df30a3c681337013",
			"license": "MPL-2.0",
			"urls": [
				"bzz-raw://6c8f69cddcf03641e75b0c403897dfd49cb5ae0bd7ab7088781bcc72c8a5d32f",
				"dweb:/ipfs/QmUDDexk245KiM25aUGVuTMaLHMr531wANN8UPQqnQXFjV"
			]
		},
		"contracts/interfaces/IRule.sol": {
			"keccak256": "0xb46279d62415804832cad7a41edb0640ae54ff6e2ec91d2b3b11d0dd1b17de9a",
			"license": "MPL-2.0",
			"urls": [
				"bzz-raw://cf158f8609a7364e4ada732162efe98ad35cc649ff08ce02edf3da8d85e7761e",
				"dweb:/ipfs/QmPb4dZBET4yv46G9AC6yyEFbAFcAWjAEjcxsbqJE7tY2Z"
			]
		},
		"contracts/interfaces/IRuleEngine.sol": {
			"keccak256": "0xd967f90f86cc40cd803ef463addfca6d6adad2e749d002da50f24258e2a92797",
			"license": "MPL-2.0",
			"urls": [
				"bzz-raw://557e56bfc603ebd325cf12acf6aa735b30e5a07540824bf20c8d518bf8b5dc85",
				"dweb:/ipfs/Qmc8dWyS6Rw3RCLP2W5JFLseaywrGT4GXfFxnGrrpdgg1M"
			]
		},
		"contracts/modules/internal/EnforcementModuleInternal.sol": {
			"keccak256": "0x121d337c441c513b70ae1d825c687f31ee897e1a97122227f4b08f580c0d517e",
			"license": "MPL-2.0",
			"urls": [
				"bzz-raw://95c9f0d1396b6545026b15d33db6ca5e408a3c2c0ce0de6271c0ff6f78a60c1b",
				"dweb:/ipfs/QmVbbpXyQfX5xY9TRyJM8kpx2cWQGmnUjtqc6epEmr9ste"
			]
		},
		"contracts/modules/internal/SnapshotModuleInternal.sol": {
			"keccak256": "0x89861e780e11a7218137697447c1b160cf816a4e7364cb3ee0510f477769298f",
			"license": "MPL-2.0",
			"urls": [
				"bzz-raw://8ac4e21dbe36441d53b615205df87485009b0a43f4f6afcf3953e032835cc7e9",
				"dweb:/ipfs/QmS8ffE1QUQn14W2XB8bMLJ6q6qsiA3ZVisXQ4XkCtMM7u"
			]
		},
		"contracts/modules/internal/ValidationModuleInternal.sol": {
			"keccak256": "0x4ba7a5beeb95ebb242301760511a6a0721e4833e2aac3cd2ce59eb1936d22f34",
			"license": "MPL-2.0",
			"urls": [
				"bzz-raw://f3ef96fb28173e1b7ae56b4d37635256bfc6b410c3d872dd01ce60763590892e",
				"dweb:/ipfs/QmR2dK7X1WRpRw2hmk39n4QfpezGbu7om6DSBTvvVbQVwx"
			]
		},
		"contracts/modules/security/OnlyDelegateCallModule.sol": {
			"keccak256": "0xecce4ad06a40ccaf03c2b931f06dd7131627c2f4e27e717e4ff13bcf5abe0822",
			"license": "MPL-2.0",
			"urls": [
				"bzz-raw://c36c23394fb9d89a7e6365fbec02601f803ff434411cbf818f66c77193f79699",
				"dweb:/ipfs/QmefZhe3dYZHxDeAgssCRdmXLmTHKmwsdpP4udQKxrCEGj"
			]
		},
		"contracts/modules/wrapper/mandatory/BaseModule.sol": {
			"keccak256": "0xe1ea9fd2fcba4cbb81c6ed57749aa934148dac9b30a41b174243c2ee503940d6",
			"license": "MPL-2.0",
			"urls": [
				"bzz-raw://1f460a02a0e1f12afa472d8c34273f2692f39246b53c2923edb4a281d341cd77",
				"dweb:/ipfs/QmSN2fRHSWL2PE3doEEndm3br4H3zxkprM59sdRfvjMJxP"
			]
		},
		"contracts/modules/wrapper/mandatory/BurnModule.sol": {
			"keccak256": "0x221bd24bde70499c82536cd0623c5b2d15c0dbf0c6ffe69dbbe6f5b21a6a8bc8",
			"license": "MPL-2.0",
			"urls": [
				"bzz-raw://2b199942ac600c6db4ae8ec35da1164e202c50c43c1a8e7d2336a376ebbe7de2",
				"dweb:/ipfs/QmZkemoDqY6dAm1KGN4yZiBndRcqdstq5JPxuEfye3b727"
			]
		},
		"contracts/modules/wrapper/mandatory/ERC20BaseModule.sol": {
			"keccak256": "0xe4ae8202797c8c2486bf508d1432a866e62ac2dab6a924cdc854d97b3afcf90c",
			"license": "MPL-2.0",
			"urls": [
				"bzz-raw://9eed305e315a5325814b6131b574f4787eeec1387ec7ba358a9c0f3e17e12e05",
				"dweb:/ipfs/QmZrCjqgvEzuEsFRcYMWAbXzkCrGuFVygAUHzxkEvUuEEK"
			]
		},
		"contracts/modules/wrapper/mandatory/EnforcementModule.sol": {
			"keccak256": "0x156830df83c9d15730f3cbc4676eba060045276ba8e8711b286f455647db0b62",
			"license": "MPL-2.0",
			"urls": [
				"bzz-raw://7b336b88f62eef9b2eddd3abaf3219bebcd6b008aa325f73645fb3113ab6baf0",
				"dweb:/ipfs/QmekA7Sy2uq9K4qiTKrSVp3vaxZJEgUh6425d94KPx1ZVa"
			]
		},
		"contracts/modules/wrapper/mandatory/MintModule.sol": {
			"keccak256": "0x655185f513e49e965e1f717fa3cff42a6b11fedbbefd99d9576c1a145a29a20f",
			"license": "MPL-2.0",
			"urls": [
				"bzz-raw://24d42f79dddfd9b416a3d60460d3183406cc77a78497b5865e1a7cdcdd00b75c",
				"dweb:/ipfs/QmT1eBcBCtbufWJpHQAzkfR8VdCEfvneg4ZBQuCLLr7MgV"
			]
		},
		"contracts/modules/wrapper/mandatory/PauseModule.sol": {
			"keccak256": "0xa22b9240cbd9b03d4fd4a5cfa432e7f088c81ea2d0f6dcf013165e291249b7f0",
			"license": "MPL-2.0",
			"urls": [
				"bzz-raw://1b6a3880b3b2e87fa68809555103e6c572035452ea7484342b16eca7498903ad",
				"dweb:/ipfs/QmZxWB3CqesCjiNR53vs2S9oK1CZoZuCvFDW3iy4a52vDQ"
			]
		},
		"contracts/modules/wrapper/mandatory/SnapshotModule.sol": {
			"keccak256": "0x3f8afb641ce6c50966c64c3f188177a0b09d4e2cf028bcb3b28a3af98e587cd3",
			"license": "MPL-2.0",
			"urls": [
				"bzz-raw://ebe24ff8d2f0c01dc2bdbcd2c492035d93def30d94a5f77106e0ab255c371e51",
				"dweb:/ipfs/QmTLD71U9QhgqrWcNJ1LprJ3LVqaSdoQrEWebzTb9M2jjg"
			]
		},
		"contracts/modules/wrapper/optional/AuthorizationModule.sol": {
			"keccak256": "0x60dc53e6bf8a5fdc7bfa650c94f2c7596881baac96ba2248e30f3842cd558a15",
			"license": "MPL-2.0",
			"urls": [
				"bzz-raw://949fd029036642fee57cd4f25d355b784444c57d08b3ae5074d6909860618d8c",
				"dweb:/ipfs/QmXQT2o1TxzGT9mwn1vREebnTk7mLz6QiLBPVFTYig6YFL"
			]
		},
		"contracts/modules/wrapper/optional/MetaTxModule.sol": {
			"keccak256": "0x0aea792bec24bac827c32e12d7c9762c78ebc246874e3bf0d19a64e1f746f1c3",
			"license": "MPL-2.0",
			"urls": [
				"bzz-raw://1525817b51751183a1c6597d2e33bb63082eb43cf0e72137d016f152d4b6c864",
				"dweb:/ipfs/QmSyGAXafYDapN8ojCbuUgKfHVnho49DsZpxf3BYUssNKi"
			]
		},
		"contracts/modules/wrapper/optional/ValidationModule.sol": {
			"keccak256": "0xf64a5b6db7accd50b280495d2af984fc6849005716828e2e91d31935b4b06a52",
			"license": "MPL-2.0",
			"urls": [
				"bzz-raw://0b6c774e9bf1b2976e75ad28acd493e0874ce77079ec37809230fcdcb15de3e9",
				"dweb:/ipfs/QmYTWQUTdWnUdGk1nYhHebTdk2frMDAum7hyD9TnheUvTp"
			]
		},
		"openzeppelin-contracts-upgradeable/contracts/access/AccessControlUpgradeable.sol": {
			"keccak256": "0x42261ad9d6311ea9da15239f020761c5666274e984f1bc2559d7e91971b80ff0",
			"license": "MIT",
			"urls": [
				"bzz-raw://6fece750c4f8854dbb00202048ab269a6a9b239b37153388b1f918f66ace4681",
				"dweb:/ipfs/QmYBMoGKKDWxNDDsbutVanJuNmpbT7j157dd66trc9CoMM"
			]
		},
		"openzeppelin-contracts-upgradeable/contracts/access/IAccessControlUpgradeable.sol": {
			"keccak256": "0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa",
			"license": "MIT",
			"urls": [
				"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c",
				"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b"
			]
		},
		"openzeppelin-contracts-upgradeable/contracts/metatx/ERC2771ContextUpgradeable.sol": {
			"keccak256": "0x10d677119c17bf67ce9ba5edcfbf45ae9f086296fd37f1ccbf533344b71e6951",
			"license": "MIT",
			"urls": [
				"bzz-raw://209a350bfe2df45139a9192d6aa9340229dcc0f7a6733cb15af4c6dcf1d41d82",
				"dweb:/ipfs/QmVH6iWVuER6uFRUV9gJh6zcUJh4hTvbpidnxLptsuVdrS"
			]
		},
		"openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
			"keccak256": "0xedc5eaa54866c6d0e8960d9fe8ea6f9052ba28686907f6886f83dfba41fa1549",
			"license": "MIT",
			"urls": [
				"bzz-raw://0b296244e62d13e87d8272c574fb58c22af02b262d74d7a8f642753522351bb0",
				"dweb:/ipfs/Qmcd3MfBWRE8EQt67AqgGGHviNum5aQ7JE7manH5nNtx4o"
			]
		},
		"openzeppelin-contracts-upgradeable/contracts/security/PausableUpgradeable.sol": {
			"keccak256": "0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250",
			"license": "MIT",
			"urls": [
				"bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad",
				"dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR"
			]
		},
		"openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol": {
			"keccak256": "0x17aff86be546601617585e91fd98aad74cf39f1be65d8eb6f93b7f3c30181275",
			"license": "MIT",
			"urls": [
				"bzz-raw://e75109e30d04e3fe6e31e0294ca357a695911b3599582be39e89b1207273773a",
				"dweb:/ipfs/QmRRgRNTjXRjn7aqyaSfm8rDiCEDyoVhHnENXj6TZbrnGR"
			]
		},
		"openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol": {
			"keccak256": "0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff",
			"license": "MIT",
			"urls": [
				"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2",
				"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF"
			]
		},
		"openzeppelin-contracts-upgradeable/contracts/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
			"keccak256": "0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb",
			"license": "MIT",
			"urls": [
				"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d",
				"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ"
			]
		},
		"openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
			"keccak256": "0x0a3b4afc301241e2629ad192fa02e0f8626e3cf38ab6f45342bfd7afbde16ee0",
			"license": "MIT",
			"urls": [
				"bzz-raw://b189423f1102ff4487e9c59a65ec400b98cc4aeef478dac8272b482e9f5ad7de",
				"dweb:/ipfs/QmdpYHrzD8wPe5DMuEiWkXiVLsTkqD7C4tbBjWwkBQwJi2"
			]
		},
		"openzeppelin-contracts-upgradeable/contracts/utils/ArraysUpgradeable.sol": {
			"keccak256": "0x315d7b19ae02a99c51723f7c0440d9a3b3af7b9a126640194f87a329c98ac123",
			"license": "MIT",
			"urls": [
				"bzz-raw://3625cb17e5746f1faeec2de4456bf67a725bdc5bbab8122dc7d67f51e8e914b3",
				"dweb:/ipfs/QmVxwkpXUuhqhsbPsYX8M5gQqFTTZ8E48XC7hPczNAc4eP"
			]
		},
		"openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
			"keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
			"license": "MIT",
			"urls": [
				"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
				"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
			]
		},
		"openzeppelin-contracts-upgradeable/contracts/utils/StorageSlotUpgradeable.sol": {
			"keccak256": "0x09864aea84f01e39313375b5610c73a3c1c68abbdc51e5ccdd25ff977fdadf9a",
			"license": "MIT",
			"urls": [
				"bzz-raw://aedb48081190fa828d243529ce25c708202c7d4ccfe99f0e4ecd6bc0cfcd03f3",
				"dweb:/ipfs/QmWyiDQHPZA56iqsAwTmiJoxvNeRQLUVr4gTfzpdpXivpo"
			]
		},
		"openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol": {
			"keccak256": "0x0c2ac2e8ea31517e8a807e6fe8a3cf6de47ae76a5e8ed8ca60a209efa12aab69",
			"license": "MIT",
			"urls": [
				"bzz-raw://88334f7a744ce234f624320e485c23ecdcc1a1cbb62d3251d495c0776cf465f3",
				"dweb:/ipfs/QmX15xCk4dLM6dL3JVzQZ3t47H3nahccWaSZosEN8vKzQw"
			]
		},
		"openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
			"keccak256": "0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a",
			"license": "MIT",
			"urls": [
				"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7",
				"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw"
			]
		},
		"openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol": {
			"keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
			"license": "MIT",
			"urls": [
				"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
				"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
			]
		},
		"openzeppelin-contracts-upgradeable/contracts/utils/math/MathUpgradeable.sol": {
			"keccak256": "0xb49137b771712774960cca0acf428499e2aa85f179fe03712e5c06c5a6ab6316",
			"license": "MIT",
			"urls": [
				"bzz-raw://ec66760482c33d84dda577e3a7a4b81000a92e37cae5c8b55339e2d83abfce03",
				"dweb:/ipfs/QmVDSFsp9dnW8P92Yrq2jAjr9piKke8gjuZX5QjtFuZRfx"
			]
		}
	},
	"version": 1
}